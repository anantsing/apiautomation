package test;
import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.equalTo;
import static org.testng.Assert.assertEquals;

import org.testng.annotations.Test;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import payload.RequestPayload;

public class AddPlace {
	static String placeId;
	@Test(priority=1)
	public void createGooglePlace(){
		
		RestAssured.baseURI="https://rahulshettyacademy.com";
		String response	=	given().log().all().queryParam("Key","qaclick123").header("Content-Type","application/json").
				body(RequestPayload.placePayLoad()).
				when().post("maps/api/place/add/json").
				then().log().all().assertThat().statusCode(200)
				             .header("Server","Apache/2.4.41 (Ubuntu)").
				             body("status",equalTo("OK")).extract().response().asString();//all resonse comes instring form
		     
		      JsonPath js = new JsonPath(response);
		       placeId  = js.getString("place_id");
		      System.out.println(placeId);
				
	}
	@Test(priority=0)
	public  void getGooglePlace() {
	RestAssured.baseURI="https://rahulshettyacademy.com";
		
		String reques = given().queryParam("Key","qaclick123").queryParam("place_id",placeId).
		when().get("maps/api/place/get/json").
		then().log().all().assertThat().statusCode(200).extract().response().asString();;
		
		JsonPath js1= new JsonPath(reques);
		String  add = js1.getString("address");
		System.out.println("add");
		assertEquals("29, side layout, cohen 09", add);
		System.out.println(add);
		
		
		
	}

}
